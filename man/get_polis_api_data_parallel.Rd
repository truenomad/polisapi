% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_polis_api_data_parallel.R
\name{get_polis_api_data_parallel}
\alias{get_polis_api_data_parallel}
\title{Retrieve POLIS Data in Parallel by Date Chunks}
\usage{
get_polis_api_data_parallel(
  min_date = "2021-01-01",
  max_date = Sys.Date(),
  data_type = "cases",
  region = "Global",
  country_code = NULL,
  select_vars = NULL,
  updated_dates = FALSE,
  polis_api_key = Sys.getenv("POLIS_API_KEY"),
  save_polis = FALSE,
  polis_filname = NULL,
  polis_path = NULL,
  max_polis_archive = 5,
  output_format = "rds",
  log_results = FALSE,
  log_file_path = NULL,
  date_interval = "1 week",
  workers = max(1, parallel::detectCores() - 1),
  quiet = FALSE
)
}
\arguments{
\item{min_date}{Start date for data retrieval in 'YYYY-MM-DD' format.
Specifies the earliest date of the data to be fetched.
Required parameter.}

\item{max_date}{End date for data retrieval in 'YYYY-MM-DD' format.
Defaults to the current system date. Specifies the latest
date of the data to be fetched.}

\item{data_type}{Type of data to retrieve.
Supported types include 'cases', 'virus', 'population',
'env' (Environmental), 'geo' (Geographical), 'geo_synonym',
'im' (Independent Monitoring), 'activity', 'sub_activ'
(Sub-activities), and 'lqas' (Lot Quality Assurance
Sampling), 'lab_specimen' (Human Specimen),
'lab_env' (Environmental Sample), 'lab_specimen_virus'
(Human Specimen Viruses). Default is 'cases'.}

\item{region}{Region code for data filtering.
Represents the WHO region from which to retrieve the data.
Possible values are AFRO; AMRO; EMRO; EURO; SEARO; WPRO Use
'Global' to retrieve global data. Default is 'Global'.}

\item{country_code}{ISO3 country code to filter the data. Default is NULL.}

\item{select_vars}{Vector of variables to select from the API response.
If NULL (default), all variables are selected.}

\item{updated_dates}{Logical indicating whether to use the 'LastUpdateDate'}

\item{polis_api_key}{API key for authentication.
Default is retrieved from the environment variable
'POLIS_API_KEY'. An explicit API key can be provided
if required.}

\item{save_polis}{Logical. If TRUE, saves retrieved data. Default is FALSE.}

\item{polis_filname}{Filename for saving data. Required when save_polis = TRUE.
Default is NULL.}

\item{polis_path}{Directory path for saving data. Required when save_polis = TRUE.
Default is NULL.}

\item{max_polis_archive}{Number of archives to retain. Default = 5.}

\item{output_format}{Format to save output. Default is 'rds'.}

\item{log_results}{Logical. If TRUE, logs metadata about the pull.}

\item{log_file_path}{Path to save log file if \code{log_results = TRUE}.
NULL is default.}

\item{date_interval}{A \code{seq.Date} interval for chunks (e.g., "1 month").}

\item{workers}{Number of parallel workers. Defaults to
\code{max(1, parallel::detectCores() - 1)}.}

\item{quiet}{Logical. If TRUE, suppresses progress messages and
non-critical warnings; also disables chunk-level progress bars.}
}
\value{
A data.frame of POLIS data, or invisible NULL if
\code{save_polis = TRUE}.
}
\description{
Splits the requested date range into non-overlapping chunks (e.g.,
monthly) and downloads each chunk in parallel using cross-platform PSOCK
clusters. This avoids OData continuation-token constraints by
parallelizing across independent sub-queries. Results are combined and
optionally saved once.
}
\details{
Works on macOS and Windows (no forking required).
}
\examples{
\dontrun{
df <- get_polis_api_data_parallel(
  min_date = "2025-01-01",
  data_type = "virus",
  region = "Global",
  date_interval = "1 month",
  workers = 4
)
}

}
